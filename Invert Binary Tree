/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) 
    {   ios_base::sync_with_stdio(false); cin.tie(NULL);cout.tie(NULL);
        vector<TreeNode*>V;
        V.push_back(root);
       while( V.size() )
       {
         auto it=V[0];
          V.erase(V.begin());
           if(it==NULL) continue;
           swap(it->left,it->right);
           V.push_back(it->left);
           V.push_back(it->right);
       }
     return root;
     
    }
};
